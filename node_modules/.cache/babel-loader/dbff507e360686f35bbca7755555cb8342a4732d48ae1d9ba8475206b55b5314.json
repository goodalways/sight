{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanyap/Downloads/Revised Sight/sight/src/Conversations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport { imageDb } from './firebaseConfig';\nimport { getDownloadURL, listAll, ref } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversations() {\n  _s();\n  const [imgUrl, setImgUrl] = useState([]);\n  useEffect(() => {\n    listAll(ref(imageDb)).then(imgs => {\n      console.log(imgs, \"imgs\");\n      // imgs.prefixes.forEach((folderRef) => {\n      //     // All the prefixes under listRef.\n      //     // You may call listAll() recursively on them.\n      //     console.log(folderRef);\n      //   }) \n\n      imgs.items.forEach(img => {\n        getDownloadURL(img).then(url => {\n          setImgUrl(data => [...data, url]);\n        });\n      });\n    });\n  }, []);\n\n  //console.log(imgUrl, \"imgUrl\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversations\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), imgUrl.map(dataVal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: dataVal,\n        height: \"200\",\n        width: \"200\",\n        alt: \"screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Conversations, \"hjNvoPbwEdvz+Xk3uSpCQdjwqDQ=\");\n_c = Conversations;\nexport default Conversations;\nvar _c;\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","imageDb","getDownloadURL","listAll","ref","jsxDEV","_jsxDEV","Conversations","_s","imgUrl","setImgUrl","then","imgs","console","log","items","forEach","img","url","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dataVal","src","height","width","alt","_c","$RefreshReg$"],"sources":["/Users/jonathanyap/Downloads/Revised Sight/sight/src/Conversations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport { imageDb } from './firebaseConfig';\nimport { getDownloadURL, listAll, ref } from 'firebase/storage';\n\nfunction Conversations() {\n    \n    const [imgUrl, setImgUrl] = useState([]);\n    useEffect(() => {\n        listAll(ref(imageDb)).then(imgs => { \n                console.log(imgs, \"imgs\");\n                // imgs.prefixes.forEach((folderRef) => {\n                //     // All the prefixes under listRef.\n                //     // You may call listAll() recursively on them.\n                //     console.log(folderRef);\n                //   }) \n                \n                \n                imgs.items.forEach(img => {\n                getDownloadURL(img).then(url => {\n                    setImgUrl(data => [...data, url])\n                })\n            })\n        })\n    },[]);\n\n    //console.log(imgUrl, \"imgUrl\");\n    \n    return (\n        <div className='conversations'>\n            <Navbar />\n            {\n                imgUrl.map(dataVal => \n                    <div>\n                        <img src={dataVal} height=\"200\" width=\"200\" alt=\"screenshot\" />\n                        <br></br>    \n                    </div>)\n            }\n        </div>\n    )\n}\n\nexport default Conversations;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,cAAc,EAAEC,OAAO,EAAEC,GAAG,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZI,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CAAC,CAACU,IAAI,CAACC,IAAI,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAE,MAAM,CAAC;MACzB;MACA;MACA;MACA;MACA;;MAGAA,IAAI,CAACG,KAAK,CAACC,OAAO,CAACC,GAAG,IAAI;QAC1Bf,cAAc,CAACe,GAAG,CAAC,CAACN,IAAI,CAACO,GAAG,IAAI;UAC5BR,SAAS,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;;EAEL;;EAEA,oBACIZ,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1Bf,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAENhB,MAAM,CAACiB,GAAG,CAACC,OAAO,iBACdrB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAKsB,GAAG,EAAED,OAAQ;QAACE,MAAM,EAAC,KAAK;QAACC,KAAK,EAAC,KAAK;QAACC,GAAG,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEd,CAAC;AAEd;AAACjB,EAAA,CAnCQD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}