{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanyap/Downloads/Revised Sight/sight/src/Components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, redirect } from 'react-router-dom';\nimport { useSpeechRecognition } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const commands = [{\n    command: [\"Go to *\", \"Open *\"],\n    callback: redirectPage => setRedirectUrl(redirectPage)\n  }];\n  const {\n    transcript\n  } = useSpeechRecognition({\n    commands\n  });\n  const [redirectUrl, setRedirectUrl] = useState('');\n  const [blocked, setBlocked] = useState(false);\n  const onEnd = () => {\n    // You could do something here after listening has finished\n  };\n  const onResult = speechResult => {\n    //setSpeechValue(speechResult);\n  };\n  const onError = event => {\n    if (event.error === 'not-allowed') {\n      setBlocked(true);\n    }\n  };\n  const {\n    listen,\n    listening,\n    stop\n  } = useSpeechRecognition({\n    onResult,\n    onEnd,\n    onError\n  });\n  const toggle = listening ? stop : () => {\n    setBlocked(false);\n    listen();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"transcript\",\n        children: [\"Sight - \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: blocked,\n        type: \"button\",\n        onClick: toggle,\n        children: listening ? 'Stop' : 'Listen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/conversations\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"+TUnJvBlYrDm06kSu943f6c37lI=\", false, function () {\n  return [useSpeechRecognition, useSpeechRecognition];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","redirect","useSpeechRecognition","jsxDEV","_jsxDEV","Navbar","_s","commands","command","callback","redirectPage","setRedirectUrl","transcript","redirectUrl","blocked","setBlocked","onEnd","onResult","speechResult","onError","event","error","listen","listening","stop","toggle","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","disabled","type","onClick","to","_c","$RefreshReg$"],"sources":["/Users/jonathanyap/Downloads/Revised Sight/sight/src/Components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, redirect } from 'react-router-dom';\nimport { useSpeechRecognition } from 'react-speech-kit';\n\nfunction Navbar() {\n\n    const commands = [\n        {\n            command: [\"Go to *\", \"Open *\"],\n            callback: (redirectPage) => setRedirectUrl(redirectPage),\n        },\n    ];\n\n    const {transcript} = useSpeechRecognition({commands});\n    const  [redirectUrl, setRedirectUrl] = useState('');\n    const [blocked, setBlocked] = useState(false);\n    \n    const onEnd = () => {\n        // You could do something here after listening has finished\n      };\n    \n    const onResult = (speechResult) => {\n        //setSpeechValue(speechResult);\n    };\n    \n    const onError = (event) => {\n    if (event.error === 'not-allowed') {\n        setBlocked(true);\n    }\n    };\n    \n    const { listen, listening, stop } = useSpeechRecognition({\n    onResult,\n    onEnd,\n    onError,\n    });\n\n    const toggle = listening\n    ? stop\n    : () => {\n        setBlocked(false);\n        listen();\n        };\n\n\n\n\n    return (\n        <div className='navbar'>\n            <div className='navbar-logo'>\n                <p id=\"transcript\">Sight - {transcript}</p>\n                <button disabled={blocked} type=\"button\" onClick={toggle}>\n                    {listening ? 'Stop' : 'Listen'}\n                </button>\n            </div>    \n            <ul className='navbar-menu'>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/conversations\">Conversations</Link></li>\n            </ul>\n        </div>\n    )\n}   \n\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}