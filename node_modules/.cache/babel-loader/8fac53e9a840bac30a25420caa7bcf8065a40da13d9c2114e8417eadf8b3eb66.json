{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanyap/Downloads/sight/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback, useEffect } from 'react';\nimport './App.css';\n//import Webcam from 'webcam-easy';\n//import WebcamImage from \"./WebcamImage\";\nimport Webcam from \"react-webcam\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction qwe() {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = async () => {\n    // const base64String = reader.result\n    //   .replace('data:', '')\n    //   .replace(/^.+,/, '');\n    const base64String2 = img.replace('data:', '').replace(/^.+,/, '');\n    //alert(base64String);\n    //alert(base64String2);\n    const data = {\n      model: \"gpt-4-vision-preview\",\n      messages: [{\n        \"role\": \"user\",\n        \"content\": [{\n          \"type\": \"text\",\n          \"text\": \"Imagine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture?\"\n        }, {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": `data:image/jpeg;base64,${base64String2}`\n          }\n        }]\n      }],\n      max_tokens: 300\n    };\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer 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` // Use environment variable for API key\n        },\n\n        body: JSON.stringify(data)\n      });\n      setUploadProgress(50); // Midway progress\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const apiResponse = await response.json();\n      setUploadProgress(100); // Final progress\n      if (apiResponse.choices && apiResponse.choices.length > 0) {\n        setResult(apiResponse.choices[0].message.content);\n        setStatusMessage('Analysis complete.');\n      } else {\n        console.error('No choices returned from API');\n        setStatusMessage('Failed to get a response from the API.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error);\n      setStatusMessage('An error occurred during the analysis.');\n    }\n  };\n}\nfunction App() {\n  _s();\n  const [img, setImg] = useState(null);\n  const webcamRef = useRef(null);\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\"\n  };\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n  }, [webcamRef]);\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const readOutText = () => {\n    speak({\n      text: result\n    });\n  };\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState('');\n  const [result, setResult] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n  //const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const webcamElement = document.getElementById('webcam');\n  const canvasElement = document.getElementById('canvas');\n  const snapSoundElement = document.getElementById('snapSound');\n  const webcam = new Webcam(webcamElement, 'user', canvasElement, snapSoundElement);\n  let isCamOpen = true;\n  const handleFileChange = useCallback(selectedFile => {\n    setFile(selectedFile);\n    setPreview(URL.createObjectURL(selectedFile));\n    setStatusMessage('Image selected. Click \"Analyze Image\" to proceed.');\n    setUploadProgress(0);\n  }, []);\n  // useEffect(()=>{\n  //     webcam.start().then(()=>{\n  //     });\n  //   return () => {\n  //     webcam.stop();\n  //   };\n  // },[]);\n  // const handleBeforeUnload = () =>{\n  //   console.log(\"stop camera\");\n  //   webcam.stop();\n  // }\n  const handleSnap = () => {\n    const picture = webcam.snap();\n    console.log(picture);\n    document.querySelector('#download-photo').href = picture;\n    webcam.stop();\n  };\n  const openCamera = () => {\n    webcam.start();\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      setStatusMessage('No file selected!');\n      return;\n    }\n    setStatusMessage('Sending request...');\n    setUploadProgress(10); // Initial progress\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n      // const base64String = reader.result\n      //   .replace('data:', '')\n      //   .replace(/^.+,/, '');\n      const base64String2 = img.replace('data:', '').replace(/^.+,/, '');\n      //alert(base64String);\n      //alert(base64String2);\n      const data = {\n        model: \"gpt-4-vision-preview\",\n        messages: [{\n          \"role\": \"user\",\n          \"content\": [{\n            \"type\": \"text\",\n            \"text\": \"Imagine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture?\"\n          }, {\n            \"type\": \"image_url\",\n            \"image_url\": {\n              \"url\": `data:image/jpeg;base64,${base64String2}`\n            }\n          }]\n        }],\n        max_tokens: 300\n      };\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer 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` // Use environment variable for API key\n          },\n\n          body: JSON.stringify(data)\n        });\n        setUploadProgress(50); // Midway progress\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const apiResponse = await response.json();\n        setUploadProgress(100); // Final progress\n        if (apiResponse.choices && apiResponse.choices.length > 0) {\n          setResult(apiResponse.choices[0].message.content);\n          setStatusMessage('Analysis complete.');\n        } else {\n          console.error('No choices returned from API');\n          setStatusMessage('Failed to get a response from the API.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert(error);\n        setStatusMessage('An error occurred during the analysis.');\n      }\n    };\n    // reader.onerror = (error) => {\n    //   console.error('Error:', error);\n    //   setStatusMessage('File reading failed!');\n    // };\n  };\n\n  const handleDragOver = useCallback(event => {\n    event.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(() => {\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback(event => {\n    event.preventDefault();\n    setDragOver(false);\n    const files = event.dataTransfer.files;\n    if (files.length) {\n      handleFileChange(files[0]);\n    }\n  }, [handleFileChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: img === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          mirrored: true,\n          height: 400,\n          width: 400,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: videoConstraints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: capture,\n          children: \"Capture photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"screenshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setImg(null),\n          children: \"Retake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drop-area ${dragOver ? 'drag-over' : ''}`,\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onClick: () => document.getElementById('fileUpload').click(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUpload\",\n        type: \"file\",\n        onChange: e => handleFileChange(e.target.files[0]),\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), preview ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop an image here, or click to select an image to upload.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: uploadProgress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"readout-button\",\n      onClick: () => {\n        readOutText();\n      },\n      children: \"Read Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"analyze-button\",\n      children: \"Analyze Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: result,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VRIcaweebj/KPjcr8hnJu2/v0eQ=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useCallback","useEffect","Webcam","useSpeechSynthesis","jsxDEV","_jsxDEV","Fragment","_Fragment","qwe","reader","FileReader","readAsDataURL","file","onload","base64String2","img","replace","data","model","messages","max_tokens","response","fetch","method","headers","body","JSON","stringify","setUploadProgress","ok","Error","status","apiResponse","json","choices","length","setResult","message","content","setStatusMessage","console","error","alert","App","_s","setImg","webcamRef","videoConstraints","width","height","facingMode","capture","imageSrc","current","getScreenshot","speak","readOutText","text","result","setFile","preview","setPreview","statusMessage","uploadProgress","dragOver","setDragOver","webcamElement","document","getElementById","canvasElement","snapSoundElement","webcam","isCamOpen","handleFileChange","selectedFile","URL","createObjectURL","handleSnap","picture","snap","log","querySelector","href","stop","openCamera","start","handleSubmit","event","preventDefault","handleDragOver","handleDragLeave","handleDrop","files","dataTransfer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","mirrored","ref","screenshotFormat","onClick","src","alt","onDrop","onDragOver","onDragLeave","click","id","type","onChange","e","target","accept","style","display","value","max","readOnly","_c","$RefreshReg$"],"sources":["/Users/jonathanyap/Downloads/sight/src/App.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from 'react';\nimport './App.css';\n//import Webcam from 'webcam-easy';\n//import WebcamImage from \"./WebcamImage\";\nimport Webcam from \"react-webcam\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\nfunction qwe(){\n  const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n      // const base64String = reader.result\n      //   .replace('data:', '')\n      //   .replace(/^.+,/, '');\n      const base64String2 = img.replace('data:', '').replace(/^.+,/, '');\n      //alert(base64String);\n      //alert(base64String2);\n      const data = {\n        model: \"gpt-4-vision-preview\",\n        messages: [\n          {\n            \"role\": \"user\",\n            \"content\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"Imagine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture?\"\n              },\n              {\n                \"type\": \"image_url\",\n                \"image_url\": {\n                  \"url\": `data:image/jpeg;base64,${base64String2}`\n                }\n              }\n            ]\n          }\n        ],\n        max_tokens: 300\n      };\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer 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` // Use environment variable for API key\n          },\n          body: JSON.stringify(data)\n        });\n        setUploadProgress(50); // Midway progress\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const apiResponse = await response.json();\n        setUploadProgress(100); // Final progress\n        if (apiResponse.choices && apiResponse.choices.length > 0) {\n          setResult(apiResponse.choices[0].message.content);\n          setStatusMessage('Analysis complete.');\n        } else {\n          console.error('No choices returned from API');\n          setStatusMessage('Failed to get a response from the API.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert(error);\n        setStatusMessage('An error occurred during the analysis.');\n      }\n    };\n}\n\n\nfunction App() {\n\n  const [img, setImg] = useState(null);\n  const webcamRef = useRef(null);\n\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\",\n  };\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n  }, [webcamRef]);\n\n  const {speak} = useSpeechSynthesis();\n  const readOutText = () => {\n    speak({text:result})\n  }\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState('');\n  const [result, setResult] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n  //const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const webcamElement = document.getElementById('webcam');\nconst canvasElement = document.getElementById('canvas');\nconst snapSoundElement = document.getElementById('snapSound');\nconst webcam = new Webcam(webcamElement, 'user', canvasElement, snapSoundElement);\nlet isCamOpen = true;\n  const handleFileChange = useCallback((selectedFile) => {\n    setFile(selectedFile);\n    setPreview(URL.createObjectURL(selectedFile));\n    setStatusMessage('Image selected. Click \"Analyze Image\" to proceed.');\n    setUploadProgress(0);\n  }, []);\n  // useEffect(()=>{\n  //     webcam.start().then(()=>{\n  //     });\n  //   return () => {\n  //     webcam.stop();\n  //   };\n  // },[]);\n  // const handleBeforeUnload = () =>{\n  //   console.log(\"stop camera\");\n  //   webcam.stop();\n  // }\n  const handleSnap = () => {\n      const picture = webcam.snap();\n      console.log(picture);\n      document.querySelector('#download-photo').href = picture;\n      webcam.stop();\n  }\n  const openCamera = () =>{\n    webcam.start();\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      setStatusMessage('No file selected!');\n      return;\n    }\n    setStatusMessage('Sending request...');\n    setUploadProgress(10); // Initial progress\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n      // const base64String = reader.result\n      //   .replace('data:', '')\n      //   .replace(/^.+,/, '');\n      const base64String2 = img.replace('data:', '').replace(/^.+,/, '');\n      //alert(base64String);\n      //alert(base64String2);\n      const data = {\n        model: \"gpt-4-vision-preview\",\n        messages: [\n          {\n            \"role\": \"user\",\n            \"content\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"Imagine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture?\"\n              },\n              {\n                \"type\": \"image_url\",\n                \"image_url\": {\n                  \"url\": `data:image/jpeg;base64,${base64String2}`\n                }\n              }\n            ]\n          }\n        ],\n        max_tokens: 300\n      };\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer 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` // Use environment variable for API key\n          },\n          body: JSON.stringify(data)\n        });\n        setUploadProgress(50); // Midway progress\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const apiResponse = await response.json();\n        setUploadProgress(100); // Final progress\n        if (apiResponse.choices && apiResponse.choices.length > 0) {\n          setResult(apiResponse.choices[0].message.content);\n          setStatusMessage('Analysis complete.');\n        } else {\n          console.error('No choices returned from API');\n          setStatusMessage('Failed to get a response from the API.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert(error);\n        setStatusMessage('An error occurred during the analysis.');\n      }\n    };\n    // reader.onerror = (error) => {\n    //   console.error('Error:', error);\n    //   setStatusMessage('File reading failed!');\n    // };\n\n\n    \n  };\n  const handleDragOver = useCallback((event) => {\n    event.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(() => {\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback((event) => {\n    event.preventDefault();\n    setDragOver(false);\n    const files = event.dataTransfer.files;\n    if (files.length) {\n      handleFileChange(files[0]);\n    }\n  }, [handleFileChange]);\n  return (\n    <div className=\"App\">\n      <h1>Sight</h1>\n      <div className=\"Container\">\n      {img === null ? (\n        <>\n          <Webcam\n            audio={false}\n            mirrored={true}\n            height={400}\n            width={400}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n          />\n          <button onClick={capture}>Capture photo</button>\n        </>\n      ) : (\n        <>\n          <img src={img} alt=\"screenshot\" />\n          <button onClick={() => setImg(null)}>Retake</button>\n        </>\n      )}\n    </div>\n      <div\n        className={`drop-area ${dragOver ? 'drag-over' : ''}`}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={() => document.getElementById('fileUpload').click()}\n      >\n        <input\n          id=\"fileUpload\"\n          type=\"file\"\n          onChange={(e) => handleFileChange(e.target.files[0])}\n          accept=\"image/*\"\n          style={{ display: 'none' }}\n        />\n        {preview ? (\n          < img src={preview} alt=\"Preview\" className=\"image-preview\" />\n        ) : (\n          <p>Drag and drop an image here, or click to select an image to upload.</p >\n        )}\n      </div>\n      {statusMessage && <p className=\"status-message\">{statusMessage}</p >}\n      {uploadProgress > 0 && (\n        <progress value={uploadProgress} max=\"100\"></progress>\n      )}\n\n      {/* <button onClick={handleSnap} className='webcam-button'>Snap</button>\n      <button onClick={openCamera} className='webcam-button'>Open Camera</button> */}\n\n      <button className='readout-button' onClick={() =>{readOutText()}} >Read Out</button>\n\n\n      {/* <button onClick={handleGetPhoto} className='webcam-button'>Get Photo</button> */}\n      <button onClick={handleSubmit} className=\"analyze-button\">\n        Analyze Image\n      </button>\n      {result && (\n        <div className=\"result\">\n          <strong>Analysis Result:</strong>\n          <textarea value={result} readOnly />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}