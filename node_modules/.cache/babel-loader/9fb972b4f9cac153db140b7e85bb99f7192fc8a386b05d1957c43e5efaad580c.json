{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanyap/Downloads/sight/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport Webcam from \"react-webcam\";\nimport { useSpeechRecognition } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState('');\n  const {\n    listen,\n    stop\n  } = useSpeechRecognition({\n    onResult: speechResult => {\n      setValue(speechResult);\n      setPrompt(speechResult);\n    }\n  });\n  const sendNewPrompt = () => {\n    alert(prompt);\n    callGPT4(img, prompt);\n  };\n  const [img, setImg] = useState(null);\n  const webcamRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [prompt, setPrompt] = useState('magine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture? If there is text on the image, could you read them out as well? Only describe the object in the foreground. Do not describe the person holding the object.');\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\"\n  };\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n    setStatusMessage('Sending request...');\n    setUploadProgress(10); // Initial progress\n    callGPT4(imageSrc, prompt);\n  }, [webcamRef]);\n  const talkmethod = textToRead => {\n    const msg = new SpeechSynthesisUtterance();\n    msg.text = textToRead;\n    window.speechSynthesis.speak(msg);\n  };\n  const callGPT4 = async (imageString, promptToSend) => {\n    const base64String = imageString.replace('data:', '').replace(/^.+,/, '');\n    const data = {\n      model: \"gpt-4-vision-preview\",\n      messages: [{\n        \"role\": \"user\",\n        \"content\": [{\n          \"type\": \"text\",\n          \"text\": promptToSend\n        }, {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": `data:image/jpeg;base64,${base64String}`\n          }\n        }]\n      }],\n      max_tokens: 100\n    };\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer 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` // Use environment variable for API key\n        },\n\n        body: JSON.stringify(data)\n      });\n      setUploadProgress(50); // Midway progress\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const apiResponse = await response.json();\n      setUploadProgress(100); // Final progress\n      if (apiResponse.choices && apiResponse.choices.length > 0) {\n        talkmethod(apiResponse.choices[0].message.content);\n        setResult(apiResponse.choices[0].message.content);\n        setStatusMessage('Analysis complete.');\n      } else {\n        console.error('No choices returned from API');\n        setStatusMessage('Failed to get a response from the API.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error);\n      setStatusMessage('An error occurred during the analysis.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: img === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          mirrored: false,\n          height: 400,\n          width: 400,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: videoConstraints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: capture,\n          children: \"Capture photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"screenshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setImg(null),\n          children: \"Retake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: uploadProgress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: result,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: value,\n        onChange: event => setValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: listen,\n        onMouseUp: stop,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendNewPrompt,\n        children: \"Tell me more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DSBDdD1cCXMyMu5j3hr0WIS0pRc=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useCallback","useEffect","Webcam","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","listen","stop","onResult","speechResult","setPrompt","sendNewPrompt","alert","prompt","callGPT4","img","setImg","webcamRef","result","setResult","statusMessage","setStatusMessage","uploadProgress","setUploadProgress","videoConstraints","width","height","facingMode","capture","imageSrc","current","getScreenshot","talkmethod","textToRead","msg","SpeechSynthesisUtterance","text","window","speechSynthesis","speak","imageString","promptToSend","base64String","replace","data","model","messages","max_tokens","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","apiResponse","json","choices","length","message","content","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","mirrored","ref","screenshotFormat","onClick","src","alt","max","readOnly","onChange","event","target","onMouseDown","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/jonathanyap/Downloads/sight/src/App.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport Webcam from \"react-webcam\";\nimport { useSpeechRecognition } from 'react-speech-kit';\n\nfunction App() {\n\n  const [value, setValue] = useState('')\n  const { listen, stop } = useSpeechRecognition({\n    onResult: (speechResult) => {\n      setValue(speechResult)\n      setPrompt(speechResult)\n    }\n  })\n\n  const sendNewPrompt = () => {\n    alert(prompt)\n    callGPT4(img, prompt)\n  }\n\n  const [img, setImg] = useState(null);\n  const webcamRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [prompt, setPrompt] = useState('magine that I am a visual impaired individual. Could you explain what you see in this image as if I am seeing the picture? If there is text on the image, could you read them out as well? Only describe the object in the foreground. Do not describe the person holding the object.');\n\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\",\n  };\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n    setStatusMessage('Sending request...');\n    setUploadProgress(10); // Initial progress\n    callGPT4(imageSrc, prompt);\n  }, [webcamRef]);\n\n  const talkmethod = (textToRead) => {\n    const msg = new SpeechSynthesisUtterance();\n    msg.text = textToRead;\n    window.speechSynthesis.speak(msg);\n  }\n\n  const callGPT4 = async (imageString, promptToSend) => {\n    const base64String = imageString.replace('data:', '').replace(/^.+,/, '');\n\n    const data = {\n      model: \"gpt-4-vision-preview\",\n      messages: [\n        {\n          \"role\": \"user\",\n          \"content\": [\n            {\n              \"type\": \"text\",\n              \"text\": promptToSend\n            },\n            {\n              \"type\": \"image_url\",\n              \"image_url\": {\n                \"url\": `data:image/jpeg;base64,${base64String}`\n              }\n            }\n          ]\n        }\n      ],\n      max_tokens: 100\n    };\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer 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` // Use environment variable for API key\n        },\n        body: JSON.stringify(data)\n      });\n      setUploadProgress(50); // Midway progress\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const apiResponse = await response.json();\n      setUploadProgress(100); // Final progress\n      if (apiResponse.choices && apiResponse.choices.length > 0) {\n        talkmethod(apiResponse.choices[0].message.content);\n        setResult(apiResponse.choices[0].message.content);\n        setStatusMessage('Analysis complete.');     \n      } else {\n        console.error('No choices returned from API');\n        setStatusMessage('Failed to get a response from the API.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error);\n      setStatusMessage('An error occurred during the analysis.');\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1>Sight</h1>\n      <div className=\"Container\">\n      {img === null ? (\n        <>\n          <Webcam\n            audio={false}\n            mirrored={false}\n            height={400}\n            width={400}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n          />\n          <button onClick={capture}>Capture photo</button>\n        </>\n      ) : (\n        <>\n          <img src={img} alt=\"screenshot\" />\n          <button onClick={() => setImg(null)}>Retake</button>\n        </>\n      )}\n    </div>\n      {statusMessage && <p className=\"status-message\">{statusMessage}</p >}\n      {uploadProgress > 0 && (\n        <progress value={uploadProgress} max=\"100\"></progress>\n      )} \n      <p></p>\n      {result && (\n        <div className=\"result\">\n          <strong>Analysis Result:</strong>\n          <textarea value={result} readOnly />\n        </div>\n      )}\n\n      <div className=\"result\">\n       <textarea\n         value={value}\n         onChange={(event) => setValue(event.target.value)}\n        />\n        <button onMouseDown={listen} onMouseUp={stop}>\n          🎤\n        </button>\n        <button onClick={sendNewPrompt}>\n          Tell me more\n        </button>\n       </div>\n\n    </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}