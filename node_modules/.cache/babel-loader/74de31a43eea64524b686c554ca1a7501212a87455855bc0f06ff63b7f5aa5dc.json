{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanyap/Downloads/Revised Sight/sight/src/Components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const commands = [{\n    command: [\"Go to *\", \"Open *\"],\n    callback: redirectPage => setRedirectUrl(redirectPage)\n  }];\n  const {\n    transcript\n  } = useSpeechRecognition({\n    commands\n  });\n  const [redirectUrl, setRedirectUrl] = useState('');\n  const pages = [\"home\", \"capture\", \"conversations\"];\n  const urls = {\n    home: \"/\",\n    conversations: \"/conversations\"\n  };\n  let redirect = \"\";\n  if (redirectUrl) {\n    if (pages.includes(redirectUrl)) {\n      redirect = /*#__PURE__*/_jsxDEV(Navigate, {\n        to: urls[redirectUrl]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this);\n    } else {\n      redirect = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Could not find page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: SpeechRecognition.startListening,\n        id: \"transcript\",\n        children: [\"Sight - \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/capture\",\n          children: \"Capture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/conversations\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), redirect]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"f1mqoojQHiR+GWWbt12dYsdNTyA=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","Navigate","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Navbar","_s","commands","command","callback","redirectPage","setRedirectUrl","transcript","redirectUrl","pages","urls","home","conversations","redirect","includes","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","startListening","id","_c","$RefreshReg$"],"sources":["/Users/jonathanyap/Downloads/Revised Sight/sight/src/Components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nfunction Navbar() {\n\n    const commands = [\n        {\n            command: [\"Go to *\", \"Open *\"],\n            callback: (redirectPage) => setRedirectUrl(redirectPage),\n        },\n    ];\n\n    const {transcript} = useSpeechRecognition({commands});\n    const [redirectUrl, setRedirectUrl] = useState('');\n    const pages = [\"home\", \"capture\", \"conversations\"];\n    const urls ={\n        home: \"/\",\n        conversations: \"/conversations\",\n    }\n\n    let redirect = \"\";\n    if(redirectUrl)\n    {\n        if(pages.includes(redirectUrl))\n        {\n            redirect = <Navigate to={urls[redirectUrl]} />\n        }\n        else\n        {\n            redirect = <p>Could not find page</p>\n        }\n    }\n\n    return (\n        <div className='navbar'>\n            <div className='navbar-logo'>\n                <p onClick={SpeechRecognition.startListening} id=\"transcript\">Sight - {transcript}</p>\n            </div>\n            {/* <button onClick={SpeechRecognition.startListening}>Start</button>     */}\n            <ul className='navbar-menu'>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/capture\">Capture</Link></li>\n                <li><Link to=\"/conversations\">Conversations</Link></li>\n                {redirect}\n            </ul>\n        </div>\n    )\n}   \n\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}